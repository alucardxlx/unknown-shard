/////////////////////////////////////////////////
//                                             //
// Automatically generated by the              //
// AddonGenerator script by Arya,              //
// modified for coloring by Manu               //
// Splitterwelt.com                            //
// german roleplay freeshard                   //
//                                             //
/////////////////////////////////////////////////
using System;
using Server;

namespace Server.Items
{
	public class LightMarbleNightmareStatueAddon : BaseAddon
	{
		public override BaseAddonDeed Deed{ get{ return new LightMarbleNightmareStatueAddonDeed(); } }

		public override bool RetainDeedHue{ get{ return true; } }

		[Constructable]
		public LightMarbleNightmareStatueAddon() : this( 0 )
		{
		}

		[ Constructable ]
		public LightMarbleNightmareStatueAddon( int hue )
		{
			AddonComponent ac;
			ac = new AddonComponent( 9628 );
			ac.Hue = hue;
			ac.Name = "Marble Nightmare Statue";
			AddComponent( ac, 0, 0, 13 );
			ac = new AddonComponent( 4643 );
			ac.Hue = 1150;
			ac.Name = "Marble Statue Pedestal";
			AddComponent( ac, 0, 0, 0 );
		}

		public LightMarbleNightmareStatueAddon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );

			writer.Write( (int) 1 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );

			int version = reader.ReadInt();
		}
	}

	public class LightMarbleNightmareStatueAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon { get{ return new LightMarbleNightmareStatueAddon( this.Hue ); } }

		[Constructable]
		public LightMarbleNightmareStatueAddonDeed()
		{
			Name = "Marble Nightmare Statue (Bright Pedestal)";
		}

		public LightMarbleNightmareStatueAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}