/////////////////////////////////////////////////
//
// Automatically generated by the
// AddonGenerator script by Arya
//
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class BloodPentagramAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new BloodPentagramAddonDeed();
			}
		}

		[ Constructable ]
		public BloodPentagramAddon()
		{
			AddonComponent ac = null;
			ac = new AddonComponent( 7409 );
			AddComponent( ac, 2, 3, 0 );
			ac = new AddonComponent( 7410 );
			AddComponent( ac, 1, 3, 0 );
			ac = new AddonComponent( 7411 );
			AddComponent( ac, 0, 3, 0 );
			ac = new AddonComponent( 7412 );
			AddComponent( ac, -1, 3, 0 );
			ac = new AddonComponent( 7413 );
			AddComponent( ac, -2, 3, 0 );
			ac = new AddonComponent( 7414 );
			AddComponent( ac, -2, 2, 0 );
			ac = new AddonComponent( 7415 );
			AddComponent( ac, -2, 1, 0 );
			ac = new AddonComponent( 7416 );
			AddComponent( ac, -2, 0, 0 );
			ac = new AddonComponent( 7417 );
			AddComponent( ac, -2, -1, 0 );
			ac = new AddonComponent( 7418 );
			AddComponent( ac, -1, -1, 0 );
			ac = new AddonComponent( 7419 );
			AddComponent( ac, -1, -2, 0 );
			ac = new AddonComponent( 7420 );
			AddComponent( ac, 0, -2, 0 );
			ac = new AddonComponent( 7421 );
			AddComponent( ac, 1, -2, 0 );
			ac = new AddonComponent( 7422 );
			AddComponent( ac, 2, -2, 0 );
			ac = new AddonComponent( 7423 );
			AddComponent( ac, 3, -2, 0 );
			ac = new AddonComponent( 7424 );
			AddComponent( ac, 3, -1, 0 );
			ac = new AddonComponent( 7425 );
			AddComponent( ac, 3, 0, 0 );
			ac = new AddonComponent( 7426 );
			AddComponent( ac, 3, 1, 0 );
			ac = new AddonComponent( 7427 );
			AddComponent( ac, 3, 2, 0 );
			ac = new AddonComponent( 7428 );
			AddComponent( ac, 2, 2, 0 );
			ac = new AddonComponent( 7429 );
			AddComponent( ac, 1, 2, 0 );
			ac = new AddonComponent( 7430 );
			AddComponent( ac, 0, 2, 0 );
			ac = new AddonComponent( 7431 );
			AddComponent( ac, -1, 2, 0 );
			ac = new AddonComponent( 7432 );
			AddComponent( ac, -1, 1, 0 );
			ac = new AddonComponent( 7433 );
			AddComponent( ac, -1, 0, 0 );
			ac = new AddonComponent( 7434 );
			AddComponent( ac, 0, -1, 0 );
			ac = new AddonComponent( 7435 );
			AddComponent( ac, 1, -1, 0 );
			ac = new AddonComponent( 7436 );
			AddComponent( ac, 2, -1, 0 );
			ac = new AddonComponent( 7437 );
			AddComponent( ac, 2, 0, 0 );
			ac = new AddonComponent( 7438 );
			AddComponent( ac, 2, 1, 0 );
			ac = new AddonComponent( 7442 );
			AddComponent( ac, 1, 0, 0 );
			ac = new AddonComponent( 7441 );
			AddComponent( ac, 0, 0, 0 );
			ac = new AddonComponent( 7440 );
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 7439 );
			AddComponent( ac, 1, 1, 0 );

		}

		public BloodPentagramAddon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class BloodPentagramAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new BloodPentagramAddon();
			}
		}

		[Constructable]
		public BloodPentagramAddonDeed()
		{
			Name = "blood pentagram";
		}

		public BloodPentagramAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}